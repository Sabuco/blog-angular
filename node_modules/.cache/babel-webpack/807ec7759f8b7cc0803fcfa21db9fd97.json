{"ast":null,"code":"import { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, Output, forwardRef } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\n\nvar FroalaEditorDirective =\n/** @class */\nfunction () {\n  function FroalaEditorDirective(el, zone) {\n    this.zone = zone; // editor options\n\n    this._opts = {\n      immediateAngularModelUpdate: false,\n      angularIgnoreAttrs: null\n    };\n    this.SPECIAL_TAGS = ['img', 'button', 'input', 'a'];\n    this.INNER_HTML_ATTR = 'innerHTML';\n    this._hasSpecialTag = false;\n    this._listeningEvents = [];\n    this._editorInitialized = false;\n    this._oldModel = null; // Begin ControlValueAccesor methods.\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {}; // froalaModel directive as output: update model if editor contentChanged\n\n\n    this.froalaModelChange = new EventEmitter(); // froalaInit directive as output: send manual editor initialization\n\n    this.froalaInit = new EventEmitter();\n    var element = el.nativeElement; // check if the element is a special tag\n\n    if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) != -1) {\n      this._hasSpecialTag = true;\n    } // jquery wrap and store element\n\n\n    this._$element = $(element);\n    this.zone = zone;\n  } // Form model content changed.\n\n\n  FroalaEditorDirective.prototype.writeValue = function (content) {\n    this.updateEditor(content);\n  };\n\n  FroalaEditorDirective.prototype.registerOnChange = function (fn) {\n    this.onChange = fn;\n  };\n\n  FroalaEditorDirective.prototype.registerOnTouched = function (fn) {\n    this.onTouched = fn;\n  };\n\n  Object.defineProperty(FroalaEditorDirective.prototype, \"froalaEditor\", {\n    // End ControlValueAccesor methods.\n    // froalaEditor directive as input: store the editor options\n    set: function set(opts) {\n      this._opts = opts || this._opts;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FroalaEditorDirective.prototype, \"froalaModel\", {\n    // froalaModel directive as input: store initial editor content\n    set: function set(content) {\n      this.updateEditor(content);\n    },\n    enumerable: true,\n    configurable: true\n  }); // Update editor with model contents.\n\n  FroalaEditorDirective.prototype.updateEditor = function (content) {\n    if (JSON.stringify(this._oldModel) == JSON.stringify(content)) {\n      return;\n    }\n\n    if (!this._hasSpecialTag) {\n      this._oldModel = content;\n    } else {\n      this._model = content;\n    }\n\n    if (this._editorInitialized) {\n      if (!this._hasSpecialTag) {\n        this._$element.froalaEditor('html.set', content);\n      } else {\n        this.setContent();\n      }\n    } else {\n      if (!this._hasSpecialTag) {\n        this._$element.html(content);\n      } else {\n        this.setContent();\n      }\n    }\n  }; // update model if editor contentChanged\n\n\n  FroalaEditorDirective.prototype.updateModel = function () {\n    var _this = this;\n\n    this.zone.run(function () {\n      var modelContent = null;\n\n      if (_this._hasSpecialTag) {\n        var attributeNodes = _this._$element[0].attributes;\n        var attrs = {};\n\n        for (var i = 0; i < attributeNodes.length; i++) {\n          var attrName = attributeNodes[i].name;\n\n          if (_this._opts.angularIgnoreAttrs && _this._opts.angularIgnoreAttrs.indexOf(attrName) != -1) {\n            continue;\n          }\n\n          attrs[attrName] = attributeNodes[i].value;\n        }\n\n        if (_this._$element[0].innerHTML) {\n          attrs[_this.INNER_HTML_ATTR] = _this._$element[0].innerHTML;\n        }\n\n        modelContent = attrs;\n      } else {\n        var returnedHtml = _this._$element.froalaEditor('html.get');\n\n        if (typeof returnedHtml === 'string') {\n          modelContent = returnedHtml;\n        }\n      }\n\n      _this._oldModel = modelContent; // Update froalaModel.\n\n      _this.froalaModelChange.emit(modelContent); // Update form model.\n\n\n      _this.onChange(modelContent);\n    });\n  }; // register event on jquery element\n\n\n  FroalaEditorDirective.prototype.registerEvent = function (element, eventName, callback) {\n    if (!element || !eventName || !callback) {\n      return;\n    }\n\n    this._listeningEvents.push(eventName);\n\n    element.on(eventName, callback);\n  };\n\n  FroalaEditorDirective.prototype.initListeners = function () {\n    var self = this; // bind contentChange and keyup event to froalaModel\n\n    this.registerEvent(this._$element, 'froalaEditor.contentChanged', function () {\n      setTimeout(function () {\n        self.updateModel();\n      }, 0);\n    });\n\n    if (this._opts.immediateAngularModelUpdate) {\n      this.registerEvent(this._editor, 'keyup', function () {\n        setTimeout(function () {\n          self.updateModel();\n        }, 0);\n      });\n    }\n  }; // register events from editor options\n\n\n  FroalaEditorDirective.prototype.registerFroalaEvents = function () {\n    if (!this._opts.events) {\n      return;\n    }\n\n    for (var eventName in this._opts.events) {\n      if (this._opts.events.hasOwnProperty(eventName)) {\n        this.registerEvent(this._$element, eventName, this._opts.events[eventName]);\n      }\n    }\n  };\n\n  FroalaEditorDirective.prototype.createEditor = function () {\n    var _this = this;\n\n    if (this._editorInitialized) {\n      return;\n    }\n\n    this.setContent(true); // Registering events before initializing the editor will bind the initialized event correctly.\n\n    this.registerFroalaEvents();\n    this.initListeners(); // init editor\n\n    this.zone.runOutsideAngular(function () {\n      _this._$element.on('froalaEditor.initialized', function () {\n        _this._editorInitialized = true;\n      });\n\n      _this._editor = _this._$element.froalaEditor(_this._opts).data('froala.editor').$el;\n    });\n  };\n\n  FroalaEditorDirective.prototype.setHtml = function () {\n    this._$element.froalaEditor('html.set', this._model || '', true); // This will reset the undo stack everytime the model changes externally. Can we fix this?\n\n\n    this._$element.froalaEditor('undo.reset');\n\n    this._$element.froalaEditor('undo.saveStep');\n  };\n\n  FroalaEditorDirective.prototype.setContent = function (firstTime) {\n    if (firstTime === void 0) {\n      firstTime = false;\n    }\n\n    var self = this; // Set initial content\n\n    if (this._model || this._model == '') {\n      this._oldModel = this._model;\n\n      if (this._hasSpecialTag) {\n        var tags = this._model; // add tags on element\n\n        if (tags) {\n          for (var attr in tags) {\n            if (tags.hasOwnProperty(attr) && attr != this.INNER_HTML_ATTR) {\n              this._$element.attr(attr, tags[attr]);\n            }\n          }\n\n          if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n            this._$element[0].innerHTML = tags[this.INNER_HTML_ATTR];\n          }\n        }\n      } else {\n        if (firstTime) {\n          this.registerEvent(this._$element, 'froalaEditor.initialized', function () {\n            self.setHtml();\n          });\n        } else {\n          self.setHtml();\n        }\n      }\n    }\n  };\n\n  FroalaEditorDirective.prototype.destroyEditor = function () {\n    if (this._editorInitialized) {\n      this._$element.off(this._listeningEvents.join(\" \"));\n\n      this._editor.off('keyup');\n\n      this._$element.froalaEditor('destroy');\n\n      this._listeningEvents.length = 0;\n      this._editorInitialized = false;\n    }\n  };\n\n  FroalaEditorDirective.prototype.getEditor = function () {\n    if (this._$element) {\n      return this._$element.froalaEditor.bind(this._$element);\n    }\n\n    return null;\n  }; // send manual editor initialization\n\n\n  FroalaEditorDirective.prototype.generateManualController = function () {\n    var self = this;\n    var controls = {\n      initialize: this.createEditor.bind(this),\n      destroy: this.destroyEditor.bind(this),\n      getEditor: this.getEditor.bind(this)\n    };\n    this.froalaInit.emit(controls);\n  }; // TODO not sure if ngOnInit is executed after @inputs\n\n\n  FroalaEditorDirective.prototype.ngOnInit = function () {\n    // check if output froalaInit is present. Maybe observers is private and should not be used?? TODO how to better test that an output directive is present.\n    if (!this.froalaInit.observers.length) {\n      this.createEditor();\n    } else {\n      this.generateManualController();\n    }\n  };\n\n  FroalaEditorDirective.prototype.ngOnDestroy = function () {\n    this.destroyEditor();\n  };\n  /** @nocollapse */\n\n\n  FroalaEditorDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: NgZone\n    }];\n  };\n\n  FroalaEditorDirective.propDecorators = {\n    froalaEditor: [{\n      type: Input\n    }],\n    froalaModel: [{\n      type: Input\n    }],\n    froalaModelChange: [{\n      type: Output\n    }],\n    froalaInit: [{\n      type: Output\n    }]\n  };\n\n  FroalaEditorDirective.ɵfac = function FroalaEditorDirective_Factory(t) {\n    return new (t || FroalaEditorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  FroalaEditorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FroalaEditorDirective,\n    selectors: [[\"\", \"froalaEditor\", \"\"]],\n    inputs: {\n      froalaEditor: \"froalaEditor\",\n      froalaModel: \"froalaModel\"\n    },\n    outputs: {\n      froalaModelChange: \"froalaModelChange\",\n      froalaInit: \"froalaInit\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(function () {\n        return FroalaEditorDirective;\n      }),\n      multi: true\n    }])]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FroalaEditorDirective, [{\n      type: Directive,\n      args: [{\n        selector: '[froalaEditor]',\n        providers: [{\n          provide: NG_VALUE_ACCESSOR,\n          useExisting: forwardRef(function () {\n            return FroalaEditorDirective;\n          }),\n          multi: true\n        }]\n      }]\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc0.NgZone\n      }];\n    }, {\n      froalaModelChange: [{\n        type: Output\n      }],\n      froalaInit: [{\n        type: Output\n      }],\n      froalaEditor: [{\n        type: Input\n      }],\n      froalaModel: [{\n        type: Input\n      }]\n    });\n  })();\n\n  return FroalaEditorDirective;\n}();\n\nexport { FroalaEditorDirective };","map":{"version":3,"sources":["../../.tmp/editor/editor.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, Optional, Output, Renderer, forwardRef } from '@angular/core';\n\ndeclare var $: JQueryStatic;\n\n\n@Directive({\n  selector: '[froalaEditor]',\n   providers: [{\n    provide: NG_VALUE_ACCESSOR,useExisting:\n      forwardRef(() => FroalaEditorDirective),\n    multi: true\n  }]\n})\nexport class FroalaEditorDirective implements ControlValueAccessor {\n\n  // editor options\n  private _opts: any = {\n    immediateAngularModelUpdate: false,\n    angularIgnoreAttrs: null\n  };\n\n  // jquery wrapped element\n  private _$element: any;\n\n  private SPECIAL_TAGS: string[] = ['img', 'button', 'input', 'a'];\n  private INNER_HTML_ATTR: string = 'innerHTML';\n  private _hasSpecialTag: boolean = false;\n\n  // editor element\n  private _editor: any;\n\n  // initial editor content\n  private _model: string;\n\n  private _listeningEvents: string[] = [];\n\n  private _editorInitialized: boolean = false;\n\n  private _oldModel: string = null;\n\n  constructor(el: ElementRef,  private zone: NgZone) {\n\n    let element: any = el.nativeElement;\n\n    // check if the element is a special tag\n    if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) != -1) {\n      this._hasSpecialTag = true;\n    }\n\n    // jquery wrap and store element\n    this._$element = (<any>$(element));\n\n    this.zone = zone;\n  }\n\n  // Begin ControlValueAccesor methods.\n  onChange = (_) => {};\n  onTouched = () => {};\n\n  // Form model content changed.\n  writeValue(content: any): void {\n    this.updateEditor(content);\n  }\n\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n  registerOnTouched(fn: () => void): void { this.onTouched = fn; }\n  // End ControlValueAccesor methods.\n\n  // froalaEditor directive as input: store the editor options\n  @Input() set froalaEditor(opts: any) {\n    this._opts = opts || this._opts;\n  }\n\n  // froalaModel directive as input: store initial editor content\n  @Input() set froalaModel(content: any) {\n    this.updateEditor(content);\n  }\n\n  // Update editor with model contents.\n  private updateEditor(content: any) {\n    if (JSON.stringify(this._oldModel) == JSON.stringify(content)) {\n      return;\n    }\n\n    if (!this._hasSpecialTag) {\n      this._oldModel = content;\n    }\n    else {\n      this._model = content;\n    }\n\n    if (this._editorInitialized) {\n      if (!this._hasSpecialTag) {\n        this._$element.froalaEditor('html.set', content);\n      }\n      else {\n        this.setContent();\n      }\n    }\n    else {\n      if (!this._hasSpecialTag) {\n        this._$element.html(content);\n      }\n      else {\n        this.setContent();\n      }\n    }\n  }\n\n  // froalaModel directive as output: update model if editor contentChanged\n  @Output() froalaModelChange: EventEmitter<any> = new EventEmitter<any>();\n\n  // froalaInit directive as output: send manual editor initialization\n  @Output() froalaInit: EventEmitter<Object> = new EventEmitter<Object>();\n\n  // update model if editor contentChanged\n  private updateModel() {\n    this.zone.run(() => {\n\n      let modelContent: any = null;\n\n      if (this._hasSpecialTag) {\n\n        let attributeNodes = this._$element[0].attributes;\n        let attrs = {};\n\n        for (let i = 0; i < attributeNodes.length; i++ ) {\n\n          let attrName = attributeNodes[i].name;\n          if (this._opts.angularIgnoreAttrs && this._opts.angularIgnoreAttrs.indexOf(attrName) != -1) {\n            continue;\n          }\n\n          attrs[attrName] = attributeNodes[i].value;\n        }\n\n        if (this._$element[0].innerHTML) {\n          attrs[this.INNER_HTML_ATTR] = this._$element[0].innerHTML;\n        }\n\n        modelContent = attrs;\n      } else {\n\n        let returnedHtml: any = this._$element.froalaEditor('html.get');\n        if (typeof returnedHtml === 'string') {\n          modelContent = returnedHtml;\n        }\n      }\n\n      this._oldModel = modelContent;\n\n      // Update froalaModel.\n      this.froalaModelChange.emit(modelContent);\n\n      // Update form model.\n      this.onChange(modelContent);\n\n    })\n  }\n\n  // register event on jquery element\n  private registerEvent(element, eventName, callback) {\n\n    if (!element || !eventName || !callback) {\n      return;\n    }\n\n    this._listeningEvents.push(eventName);\n    element.on(eventName, callback);\n  }\n\n  private initListeners() {\n\n    let self = this;\n\n    // bind contentChange and keyup event to froalaModel\n    this.registerEvent(this._$element, 'froalaEditor.contentChanged', function () {\n      setTimeout(function () {\n        self.updateModel();\n      }, 0);\n    });\n\n    if (this._opts.immediateAngularModelUpdate) {\n      this.registerEvent(this._editor, 'keyup', function () {\n        setTimeout(function (){\n          self.updateModel();\n        }, 0);\n      });\n    }\n  }\n\n  // register events from editor options\n  private registerFroalaEvents() {\n\n    if (!this._opts.events) {\n      return;\n    }\n\n    for (let eventName in this._opts.events) {\n\n      if (this._opts.events.hasOwnProperty(eventName)) {\n        this.registerEvent(this._$element, eventName, this._opts.events[eventName]);\n      }\n    }\n  }\n\n  private createEditor() {\n\n    if (this._editorInitialized) {\n      return;\n    }\n\n    this.setContent(true);\n\n    // Registering events before initializing the editor will bind the initialized event correctly.\n    this.registerFroalaEvents();\n\n    this.initListeners();\n\n    // init editor\n    this.zone.runOutsideAngular(() => {\n      this._$element.on('froalaEditor.initialized', () => {\n        this._editorInitialized = true;\n      })\n\n      this._editor = this._$element.froalaEditor(this._opts).data('froala.editor').$el;\n    })\n  }\n\n  private setHtml() {\n    this._$element.froalaEditor('html.set', this._model || '', true);\n\n    // This will reset the undo stack everytime the model changes externally. Can we fix this?\n    this._$element.froalaEditor('undo.reset');\n    this._$element.froalaEditor('undo.saveStep');\n  }\n\n  private setContent(firstTime = false) {\n    let self = this;\n\n    // Set initial content\n    if (this._model || this._model == '') {\n      this._oldModel = this._model;\n      if (this._hasSpecialTag) {\n\n        let tags: Object = this._model;\n\n        // add tags on element\n        if (tags) {\n\n          for (let attr in tags) {\n            if (tags.hasOwnProperty(attr) && attr != this.INNER_HTML_ATTR) {\n              this._$element.attr(attr, tags[attr]);\n            }\n          }\n\n          if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n            this._$element[0].innerHTML = tags[this.INNER_HTML_ATTR];\n          }\n        }\n      } else {\n        if (firstTime) {\n          this.registerEvent(this._$element, 'froalaEditor.initialized', function () {\n            self.setHtml();\n          });\n        } else {\n          self.setHtml();\n        }\n\n      }\n    }\n  }\n\n  private destroyEditor() {\n    if (this._editorInitialized) {\n      this._$element.off(this._listeningEvents.join(\" \"));\n      this._editor.off('keyup');\n      this._$element.froalaEditor('destroy');\n      this._listeningEvents.length = 0;\n      this._editorInitialized = false;\n    }\n  }\n\n  private getEditor() {\n    if (this._$element) {\n      return this._$element.froalaEditor.bind(this._$element);\n    }\n\n    return null;\n  }\n\n  // send manual editor initialization\n  private generateManualController() {\n    let self = this;\n    let controls = {\n      initialize: this.createEditor.bind(this),\n      destroy: this.destroyEditor.bind(this),\n      getEditor: this.getEditor.bind(this),\n    };\n    this.froalaInit.emit(controls);\n  }\n\n  // TODO not sure if ngOnInit is executed after @inputs\n  ngOnInit() {\n    // check if output froalaInit is present. Maybe observers is private and should not be used?? TODO how to better test that an output directive is present.\n    if (!this.froalaInit.observers.length) {\n      this.createEditor();\n    } else {\n      this.generateManualController();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyEditor();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}