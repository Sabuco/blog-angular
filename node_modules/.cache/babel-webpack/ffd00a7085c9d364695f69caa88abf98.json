{"ast":null,"code":"import _createClass from \"D:/UniServerZ/www/master-fullstack/blog-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"D:/UniServerZ/www/master-fullstack/blog-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Injectable, NgModule, Component, Input, Output, EventEmitter, defineInjectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction AngularFileUploaderComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"drop\", function AngularFileUploaderComponent_div_0_div_1_Template_div_drop_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.drop($event);\n    })(\"dragover\", function AngularFileUploaderComponent_div_0_div_1_Template_div_dragover_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r13.allowDrop($event);\n    });\n    ɵngcc0.ɵɵelementStart(3, \"p\", 16);\n    ɵngcc0.ɵɵtext(4, \"Drag N Drop\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.hideSelectBtn && ctx_r2.hideResetBtn ? null : \"dragNDropBtmPad\");\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_label_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1, \"s\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 17);\n    ɵngcc0.ɵɵtext(1, \"Select File\");\n    ɵngcc0.ɵɵtemplate(2, AngularFileUploaderComponent_div_0_label_2_span_2_Template, 2, 0, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"for\", \"sel\", ctx_r3.id, \"\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.multiple);\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 18);\n    ɵngcc0.ɵɵlistener(\"change\", function AngularFileUploaderComponent_div_0_input_3_Template_input_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r15.onChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"sel\", ctx_r4.id, \"\");\n    ɵngcc0.ɵɵproperty(\"accept\", ctx_r4.formatsAllowed);\n    ɵngcc0.ɵɵattribute(\"multiple\", ctx_r4.multiple ? \"\" : null);\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_button_4_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r17.resetFileUpload();\n    });\n    ɵngcc0.ɵɵtext(1, \"Reset\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_br_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"br\");\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    \"width\": a0\n  };\n};\n\nfunction AngularFileUploaderComponent_div_0_div_8_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 26);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 27);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r21.percentComplete + \"%\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r21.percentComplete, \"%\");\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_div_8_a_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 28);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_div_8_a_9_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var i_r20 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r23.removeFile(i_r20, \"sf\");\n    });\n    ɵngcc0.ɵɵelement(1, \"i\", 29);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"p\", 21);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 22);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"p\", 23);\n    ɵngcc0.ɵɵelementStart(5, \"strong\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \"\\xA0\\xA0\\xA0\\xA0\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, AngularFileUploaderComponent_div_0_div_8_div_8_Template, 3, 4, \"div\", 24);\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_8_a_9_Template, 2, 0, \"a\", 25);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var sf_r19 = ctx.$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(sf_r19.name);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r7.convertSize(sf_r19.size), \")\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.singleFile && ctx_r7.progressBarShow && !ctx_r7.hideProgressBar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.uploadClick);\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_div_9_a_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r31 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 33);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_div_9_a_9_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r31);\n      var j_r27 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r29.removeFile(j_r27, \"na\");\n    });\n    ɵngcc0.ɵɵtext(1, \"\\xA0\");\n    ɵngcc0.ɵɵelement(2, \"i\", 29);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 30);\n    ɵngcc0.ɵɵelementStart(1, \"p\", 21);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"p\", 23);\n    ɵngcc0.ɵɵelementStart(5, \"strong\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"p\", 31);\n    ɵngcc0.ɵɵtext(8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_9_a_9_Template, 3, 0, \"a\", 32);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var na_r26 = ctx.$implicit;\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(na_r26[\"fileName\"]);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", na_r26[\"fileSize\"], \")\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(na_r26[\"errorMsg\"]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.uploadClick);\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"\", ctx_r9.uploadMsgClass, \" + afu-upload-status\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.uploadMsgText);\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 34);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 27);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"br\");\n    ɵngcc0.ɵɵelement(5, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r10.percentComplete + \"%\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r10.percentComplete, \"%\");\n  }\n}\n\nfunction AngularFileUploaderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r33 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, AngularFileUploaderComponent_div_0_div_1_Template, 5, 1, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, AngularFileUploaderComponent_div_0_label_2_Template, 3, 2, \"label\", 4);\n    ɵngcc0.ɵɵtemplate(3, AngularFileUploaderComponent_div_0_input_3_Template, 1, 3, \"input\", 5);\n    ɵngcc0.ɵɵtemplate(4, AngularFileUploaderComponent_div_0_button_4_Template, 2, 0, \"button\", 6);\n    ɵngcc0.ɵɵtemplate(5, AngularFileUploaderComponent_div_0_br_5_Template, 1, 0, \"br\", 7);\n    ɵngcc0.ɵɵelementStart(6, \"p\", 8);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, AngularFileUploaderComponent_div_0_div_8_Template, 10, 4, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_9_Template, 10, 4, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(10, AngularFileUploaderComponent_div_0_p_10_Template, 2, 4, \"p\", 11);\n    ɵngcc0.ɵɵelement(11, \"p\");\n    ɵngcc0.ɵɵtemplate(12, AngularFileUploaderComponent_div_0_div_12_Template, 6, 4, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(13, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_Template_button_click_13_listener() {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      var ctx_r32 = ɵngcc0.ɵɵnextContext();\n      return ctx_r32.uploadFiles();\n    });\n    ɵngcc0.ɵɵtext(14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(15, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.theme == \"dragNDrop\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideResetBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate2(\"(\", ctx_r0.formatsAllowed, \") Size limit- \", ctx_r0.convertSize(ctx_r0.maxSize * 1024000), \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.selectedFiles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.notAllowedList);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.uploadMsg);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.singleFile && ctx_r0.progressBarShow && !ctx_r0.hideProgressBar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r0.uploadBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.uploadBtnText);\n  }\n}\n\nfunction AngularFileUploaderComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r35 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 35);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 36);\n    ɵngcc0.ɵɵelementStart(2, \"a\", 37);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_1_Template_a_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r35);\n      var ctx_r34 = ɵngcc0.ɵɵnextContext();\n      return ctx_r34.attachpinOnclick();\n    });\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelement(4, \"i\", 38);\n    ɵngcc0.ɵɵelementStart(5, \"input\", 18);\n    ɵngcc0.ɵɵlistener(\"change\", function AngularFileUploaderComponent_div_1_Template_input_change_5_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r35);\n      var ctx_r36 = ɵngcc0.ɵɵnextContext();\n      return ctx_r36.onChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(6, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \" \\xA0 \");\n    ɵngcc0.ɵɵelementStart(8, \"span\", 39);\n    ɵngcc0.ɵɵtext(9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.attachPinText, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"sel\", ctx_r1.id, \"\");\n    ɵngcc0.ɵɵproperty(\"accept\", ctx_r1.formatsAllowed);\n    ɵngcc0.ɵɵattribute(\"multiple\", ctx_r1.multiple ? \"\" : null);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"upload-file-info\", ctx_r1.id, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.selectedFiles[0] == null ? null : ctx_r1.selectedFiles[0].name);\n  }\n}\n\nvar AngularFileUploaderService = function AngularFileUploaderService() {\n  _classCallCheck(this, AngularFileUploaderService);\n};\n\nAngularFileUploaderService.ɵfac = function AngularFileUploaderService_Factory(t) {\n  return new (t || AngularFileUploaderService)();\n};\n\nAngularFileUploaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: AngularFileUploaderService,\n  factory: AngularFileUploaderService.ɵfac,\n  providedIn: 'root'\n});\n\nAngularFileUploaderService.ctorParameters = function () {\n  return [];\n};\n/** @nocollapse */\n\n\nAngularFileUploaderService.ngInjectableDef = defineInjectable({\n  factory: function AngularFileUploaderService_Factory() {\n    return new AngularFileUploaderService();\n  },\n  token: AngularFileUploaderService,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AngularFileUploaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar AngularFileUploaderComponent = /*#__PURE__*/function () {\n  function AngularFileUploaderComponent() {\n    _classCallCheck(this, AngularFileUploaderComponent);\n\n    this.config = {};\n    this.resetUpload = this.config[\"resetUpload\"];\n    this.ApiResponse = new EventEmitter();\n    this.idDate = +new Date();\n    this.reg = /(?:\\.([^.]+))?$/;\n    this.selectedFiles = [];\n    this.notAllowedList = [];\n    this.Caption = [];\n    this.singleFile = true;\n    this.progressBarShow = false;\n    this.uploadBtn = false;\n    this.uploadMsg = false;\n    this.afterUpload = false;\n    this.uploadClick = true; //console.log(\"id: \",this.id);\n    //console.log(\"idDate: \",this.idDate);\n    //console.log(Math.random());\n  }\n  /**\n   * @param {?} rst\n   * @return {?}\n   */\n\n\n  _createClass(AngularFileUploaderComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(rst) {\n      if (rst[\"config\"]) {\n        this.theme = this.config[\"theme\"] || \"\";\n        this.id = this.config[\"id\"] || parseInt((this.idDate / 10000).toString().split(\".\")[1]) + Math.floor(Math.random() * 20) * 10000;\n        this.hideProgressBar = this.config[\"hideProgressBar\"] || false;\n        this.hideResetBtn = this.config[\"hideResetBtn\"] || false;\n        this.hideSelectBtn = this.config[\"hideSelectBtn\"] || false;\n        this.uploadBtnText = this.config[\"uploadBtnText\"] || \"Upload\";\n        this.maxSize = this.config[\"maxSize\"] || 20;\n        this.uploadAPI = this.config[\"uploadAPI\"][\"url\"];\n        this.formatsAllowed = this.config[\"formatsAllowed\"] || \".jpg,.png,.pdf,.docx,.txt,.gif,.jpeg\";\n        this.multiple = this.config[\"multiple\"] || false;\n        this.headers = this.config[\"uploadAPI\"][\"headers\"] || {};\n        this.attachPinText = this.config[\"attachPinText\"] || \"Attach supporting documents..\"; //console.log(\"config: \", this.config);\n        //console.log(this.config[\"maxSize\"]);\n        //console.log(this.headers);\n        //console.log(\"rst: \", rst);\n      }\n\n      if (rst[\"resetUpload\"]) {\n        if (rst[\"resetUpload\"].currentValue === true) {\n          this.resetFileUpload();\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      //console.log(\"Id: \", this.id);\n      this.resetUpload = false;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"resetFileUpload\",\n    value: function resetFileUpload() {\n      this.selectedFiles = [];\n      this.Caption = [];\n      this.notAllowedList = [];\n      this.uploadMsg = false;\n      this.uploadBtn = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      //console.log(this.maxSize + this.formatsAllowed + this.multiple);\n      this.notAllowedList = []; //console.log(\"onchange hit\");\n\n      if (this.afterUpload || !this.multiple) {\n        this.selectedFiles = [];\n        this.Caption = [];\n        this.afterUpload = false;\n      } //FORMATS ALLOWED LIST\n      //console.log(\"FORMATS ALLOWED LIST= \"+this.formatsAllowed);\n      //NO OF FORMATS ALLOWED\n\n      /** @type {?} */\n\n\n      var formatsCount;\n      formatsCount = this.formatsAllowed.match(new RegExp(\"\\\\.\", \"g\"));\n      formatsCount = formatsCount.length; //console.log(\"NO OF FORMATS ALLOWED= \"+formatsCount);\n      //console.log(\"-------------------------------\");\n      //ITERATE SELECTED FILES\n\n      /** @type {?} */\n\n      var file;\n\n      if (event.type == \"drop\") {\n        file = event.dataTransfer.files; //console.log(\"type: drop\");\n      } else {\n        file = event.target.files || event.srcElement.files; //console.log(\"type: change\");\n      } //console.log(file);\n\n      /** @type {?} */\n\n\n      var currentFileExt;\n      /** @type {?} */\n\n      var ext;\n      /** @type {?} */\n\n      var frmtAllowed;\n\n      for (var i = 0; i < file.length; i++) {\n        //CHECK FORMAT\n        //CURRENT FILE EXTENSION\n        currentFileExt = this.reg.exec(file[i].name);\n        currentFileExt = currentFileExt[1]; //console.log(file[i].name);\n\n        frmtAllowed = false; //FORMAT ALLOWED LIST ITERATE\n\n        for (var j = formatsCount; j > 0; j--) {\n          ext = this.formatsAllowed.split(\".\")[j]; //console.log(\"FORMAT LIST (\"+j+\")= \"+ext.split(\",\")[0]);\n\n          if (j == formatsCount) {\n            ext = this.formatsAllowed.split(\".\")[j] + \",\";\n          } //check format\n\n\n          if (currentFileExt.toLowerCase() == ext.split(\",\")[0]) {\n            frmtAllowed = true;\n          }\n        }\n\n        if (frmtAllowed) {\n          //console.log(\"FORMAT ALLOWED\");\n          //CHECK SIZE\n          if (file[i].size > this.maxSize * 1024000) {\n            //console.log(\"SIZE NOT ALLOWED (\"+file[i].size+\")\");\n            this.notAllowedList.push({\n              fileName: file[i].name,\n              fileSize: this.convertSize(file[i].size),\n              errorMsg: \"Invalid size\"\n            });\n            continue;\n          } else {\n            //format allowed and size allowed then add file to selectedFile array\n            this.selectedFiles.push(file[i]);\n          }\n        } else {\n          //console.log(\"FORMAT NOT ALLOWED\");\n          this.notAllowedList.push({\n            fileName: file[i].name,\n            fileSize: this.convertSize(file[i].size),\n            errorMsg: \"Invalid format\"\n          });\n          continue;\n        }\n      }\n\n      if (this.selectedFiles.length !== 0) {\n        this.uploadBtn = true;\n        if (this.theme == \"attachPin\") this.uploadFiles();\n      } else {\n        this.uploadBtn = false;\n      }\n\n      this.uploadMsg = false;\n      this.uploadClick = true;\n      this.percentComplete = 0;\n      event.target.value = null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"uploadFiles\",\n    value: function uploadFiles() {\n      var _this = this;\n\n      //console.log(this.selectedFiles);\n      //console.log(this.selectedFiles);\n\n      /** @type {?} */\n      var i;\n      this.progressBarShow = true;\n      this.uploadClick = false;\n      this.notAllowedList = [];\n      /** @type {?} */\n\n      var isError = false;\n      /** @type {?} */\n\n      var xhr = new XMLHttpRequest();\n      /** @type {?} */\n\n      var formData = new FormData();\n\n      for (i = 0; i < this.selectedFiles.length; i++) {\n        if (this.Caption[i] == undefined) this.Caption[i] = \"file\" + i; //Add DATA TO BE SENT\n\n        formData.append(this.Caption[i], this.selectedFiles[i]\n        /*, this.selectedFiles[i].name*/\n        ); //console.log(this.selectedFiles[i]+\"{\"+this.Caption[i]+\" (Caption)}\");\n      }\n\n      if (i > 1) {\n        this.singleFile = false;\n      } else {\n        this.singleFile = true;\n      }\n\n      xhr.onreadystatechange = function (evnt) {\n        //console.log(\"onready\");\n        if (xhr.readyState === 4) {\n          if (xhr.status !== 200) {\n            isError = true;\n            _this.progressBarShow = false;\n            _this.uploadBtn = false;\n            _this.uploadMsg = true;\n            _this.afterUpload = true;\n            _this.uploadMsgText = \"Upload Failed !\";\n            _this.uploadMsgClass = \"text-danger lead\"; //console.log(this.uploadMsgText);\n            //console.log(evnt);\n          }\n\n          _this.ApiResponse.emit(xhr);\n        }\n      };\n\n      xhr.upload.onprogress = function (evnt) {\n        _this.uploadBtn = false; // button should be disabled by process uploading\n\n        if (evnt.lengthComputable) {\n          _this.percentComplete = Math.round(evnt.loaded / evnt.total * 100);\n        } //console.log(\"Progress...\"/*+this.percentComplete+\" %\"*/);\n\n      };\n\n      xhr.onload = function (evnt) {\n        //console.log(\"onload\");\n        //console.log(evnt);\n        _this.progressBarShow = false;\n        _this.uploadBtn = false;\n        _this.uploadMsg = true;\n        _this.afterUpload = true;\n\n        if (!isError) {\n          _this.uploadMsgText = \"Successfully Uploaded !\";\n          _this.uploadMsgClass = \"text-success lead\"; //console.log(this.uploadMsgText + \" \" + this.selectedFiles.length + \" file\");\n        }\n      };\n\n      xhr.onerror = function (evnt) {//console.log(\"onerror\");\n        //console.log(evnt);\n      };\n\n      xhr.open(\"POST\", this.uploadAPI, true);\n\n      for (var _i = 0, _Object$keys = Object.keys(this.headers); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        // Object.keys will give an Array of keys\n        xhr.setRequestHeader(key, this.headers[key]);\n      } //let token = sessionStorage.getItem(\"token\");\n      //xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n      //xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n\n\n      xhr.send(formData);\n    }\n    /**\n     * @param {?} i\n     * @param {?} sf_na\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeFile\",\n    value: function removeFile(i, sf_na) {\n      //console.log(\"remove file clicked \" + i)\n      if (sf_na == \"sf\") {\n        this.selectedFiles.splice(i, 1);\n        this.Caption.splice(i, 1);\n      } else {\n        this.notAllowedList.splice(i, 1);\n      }\n\n      if (this.selectedFiles.length == 0) {\n        this.uploadBtn = false;\n      }\n    }\n    /**\n     * @param {?} fileSize\n     * @return {?}\n     */\n\n  }, {\n    key: \"convertSize\",\n    value: function convertSize(fileSize) {\n      //console.log(fileSize + \" - \"+ str);\n      return fileSize < 1024000 ? (fileSize / 1024).toFixed(2) + \" KB\" : (fileSize / 1024000).toFixed(2) + \" MB\";\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"attachpinOnclick\",\n    value: function attachpinOnclick() {\n      //console.log(\"ID: \", this.id);\n\n      /** @type {?} */\n      document.getElementById(\"sel\" + this.id).click(); //$(\"#\"+\"sel\"+this.id).click();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"drop\",\n    value: function drop(event) {\n      event.stopPropagation();\n      event.preventDefault(); //console.log(\"drop: \", event);\n      //console.log(\"drop: \", event.dataTransfer.files);\n\n      this.onChange(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"allowDrop\",\n    value: function allowDrop(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      event.dataTransfer.dropEffect = \"copy\"; //console.log(\"allowDrop: \",event)\n    }\n  }]);\n\n  return AngularFileUploaderComponent;\n}();\n\nAngularFileUploaderComponent.ɵfac = function AngularFileUploaderComponent_Factory(t) {\n  return new (t || AngularFileUploaderComponent)();\n};\n\nAngularFileUploaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AngularFileUploaderComponent,\n  selectors: [[\"angular-file-uploader\"]],\n  inputs: {\n    config: \"config\",\n    resetUpload: \"resetUpload\"\n  },\n  outputs: {\n    ApiResponse: \"ApiResponse\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"container\", \"id\", \"default\", 4, \"ngIf\"], [\"id\", \"attachPin\", 4, \"ngIf\"], [\"id\", \"default\", 1, \"container\"], [\"id\", \"dragNDrop\", \"class\", \"dragNDrop\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"btn btn-primary btn-sm afu-select-btn\", 3, \"for\", 4, \"ngIf\"], [\"type\", \"file\", \"style\", \"display: none\", \"title\", \"Select file\", \"name\", \"files[]\", 3, \"id\", \"accept\", \"change\", 4, \"ngIf\"], [\"class\", \"btn btn-info btn-sm resetBtn afu-reset-btn\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"constraints-info\", \"afu-constraints-info\"], [\"class\", \"row afu-valid-file\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row text-danger afu-invalid-file\", 4, \"ngFor\", \"ngForOf\"], [3, \"class\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"afu-upload-btn\", 3, \"disabled\", \"click\"], [\"id\", \"dragNDrop\", 1, \"dragNDrop\", 3, \"ngClass\"], [2, \"position\", \"relative\"], [\"id\", \"div1\", 1, \"div1\", \"afu-dragndrop-box\", 3, \"drop\", \"dragover\"], [1, \"afu-dragndrop-text\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", \"afu-select-btn\", 3, \"for\"], [\"type\", \"file\", \"title\", \"Select file\", \"name\", \"files[]\", 2, \"display\", \"none\", 3, \"id\", \"accept\", \"change\"], [1, \"btn\", \"btn-info\", \"btn-sm\", \"resetBtn\", \"afu-reset-btn\", 3, \"click\"], [1, \"row\", \"afu-valid-file\"], [1, \"col-xs-3\", \"textOverflow\"], [1, \"text-primary\"], [1, \"col-xs-3\", \"padMarg\", \"sizeC\"], [\"class\", \"progress col-xs-3 padMarg afu-progress-bar\", 4, \"ngIf\"], [\"class\", \"col-xs-1\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"progress\", \"col-xs-3\", \"padMarg\", \"afu-progress-bar\"], [\"role\", \"progressbar\", 1, \"progress-bar\", \"progress-bar-success\", 3, \"ngStyle\"], [\"role\", \"button\", 1, \"col-xs-1\", 3, \"click\"], [1, \"fa\", \"fa-times\"], [1, \"row\", \"text-danger\", \"afu-invalid-file\"], [1, \"col-xs-3\"], [\"class\", \"col-xs-1 delFileIcon\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"button\", 1, \"col-xs-1\", \"delFileIcon\", 3, \"click\"], [1, \"progress\", \"col-xs-4\", \"padMarg\", \"afu-progress-bar\"], [\"id\", \"attachPin\"], [2, \"position\", \"relative\", \"padding-left\", \"6px\"], [1, \"btn\", \"up_btn\", \"afu-attach-pin\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-paperclip\"], [1, \"label\", \"label-info\", 3, \"id\"]],\n  template: function AngularFileUploaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, AngularFileUploaderComponent_div_0_Template, 16, 13, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, AngularFileUploaderComponent_div_1_Template, 10, 6, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.theme !== \"attachPin\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.theme == \"attachPin\");\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgStyle],\n  styles: [\".constraints-info[_ngcontent-%COMP%]{margin-top:10px;font-style:italic}.padMarg[_ngcontent-%COMP%]{padding:0;margin-bottom:0}.caption[_ngcontent-%COMP%]{margin-right:5px}.textOverflow[_ngcontent-%COMP%]{white-space:nowrap;padding-right:0;overflow:hidden;text-overflow:ellipsis}.up_btn[_ngcontent-%COMP%]{color:#000;background-color:transparent;border:2px solid #5c5b5b;border-radius:22px}.delFileIcon[_ngcontent-%COMP%]{text-decoration:none;color:#ce0909}.dragNDrop[_ngcontent-%COMP%]   .div1[_ngcontent-%COMP%]{display:border-box;border:2px dashed #5c5b5b;height:6rem;width:20rem}.dragNDrop[_ngcontent-%COMP%]   .div1[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{text-align:center;font-weight:700;color:#5c5b5b;margin-top:1.4em}.dragNDropBtmPad[_ngcontent-%COMP%]{padding-bottom:2rem}@media screen and (max-width:620px){.caption[_ngcontent-%COMP%]{padding:0}}@media screen and (max-width:510px){.sizeC[_ngcontent-%COMP%]{width:25%}}@media screen and (max-width:260px){.caption[_ngcontent-%COMP%], .sizeC[_ngcontent-%COMP%]{font-size:10px}}.resetBtn[_ngcontent-%COMP%]{margin-left:3px}\"]\n});\n\nAngularFileUploaderComponent.ctorParameters = function () {\n  return [];\n};\n\nAngularFileUploaderComponent.propDecorators = {\n  config: [{\n    type: Input\n  }],\n  resetUpload: [{\n    type: Input\n  }],\n  ApiResponse: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AngularFileUploaderComponent, [{\n    type: Component,\n    args: [{\n      selector: \"angular-file-uploader\",\n      template: \"<div class=\\\"container\\\" *ngIf=\\\"(theme !== 'attachPin')\\\" id=\\\"default\\\">\\n\\n    <!-- Drag n Drop theme Starts -->\\n    <div *ngIf=\\\"theme == 'dragNDrop'\\\" id=\\\"dragNDrop\\\" [ngClass]=\\\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\\\" class=\\\"dragNDrop\\\">\\n        <div style=\\\"position:relative;\\\">\\n            <div id=\\\"div1\\\" class=\\\"div1 afu-dragndrop-box\\\" (drop)=\\\"drop($event)\\\" (dragover)=\\\"allowDrop($event)\\\">\\n                <p class=\\\"afu-dragndrop-text\\\">Drag N Drop</p>\\n            </div>\\n            <!-- <span class='label label-info' id=\\\"upload-file-info{{id}}\\\">{{selectedFiles[0]?.name}}</span> -->\\n        </div>\\n    </div>\\n    <!-- Drag n Drop theme Ends -->\\n\\n    <label for=\\\"sel{{id}}\\\" class=\\\"btn btn-primary btn-sm afu-select-btn\\\" *ngIf=\\\"!hideSelectBtn\\\">Select File<span *ngIf=\\\"multiple\\\">s</span></label>\\n    <input type=\\\"file\\\" id=\\\"sel{{id}}\\\" style=\\\"display: none\\\" *ngIf=\\\"!hideSelectBtn\\\" (change)=\\\"onChange($event)\\\" title=\\\"Select file\\\"\\n        name=\\\"files[]\\\" [accept]=formatsAllowed [attr.multiple]=\\\"multiple ? '' : null\\\" />\\n    <button class=\\\"btn btn-info btn-sm resetBtn afu-reset-btn\\\" (click)=\\\"resetFileUpload()\\\" *ngIf=\\\"!hideResetBtn\\\">Reset</button>\\n    <br *ngIf=\\\"!hideSelectBtn\\\">\\n    <p class=\\\"constraints-info afu-constraints-info\\\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize *1024000))}}</p>\\n    <!--Selected file list-->\\n    <div class=\\\"row afu-valid-file\\\" *ngFor=\\\"let sf of selectedFiles;let i=index\\\" >\\n        <p class=\\\"col-xs-3 textOverflow\\\"><span class=\\\"text-primary\\\">{{sf.name}}</span></p>\\n        <p class=\\\"col-xs-3 padMarg sizeC\\\"><strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\\n        <!--  <input class=\\\"col-xs-3 progress caption\\\"  type=\\\"text\\\"  placeholder=\\\"Caption..\\\"  [(ngModel)]=\\\"Caption[i]\\\"  *ngIf=\\\"uploadClick\\\"/> -->\\n        <div class=\\\"progress col-xs-3 padMarg afu-progress-bar\\\" *ngIf=\\\"singleFile && progressBarShow && !hideProgressBar\\\">\\n            <span class=\\\"progress-bar progress-bar-success\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{'width':percentComplete+'%'}\\\">{{percentComplete}}%</span>\\n        </div>\\n        <a class=\\\"col-xs-1\\\" role=\\\"button\\\" (click)=\\\"removeFile(i,'sf')\\\" *ngIf=\\\"uploadClick\\\"><i class=\\\"fa fa-times\\\"></i></a>\\n    </div>\\n    <!--Invalid file list-->\\n    <div class=\\\"row text-danger afu-invalid-file\\\" *ngFor=\\\"let na of notAllowedList;let j=index\\\">\\n        <p class=\\\"col-xs-3 textOverflow\\\"><span>{{na['fileName']}}</span></p>\\n        <p class=\\\"col-xs-3 padMarg sizeC\\\"><strong>({{na['fileSize']}})</strong></p>\\n        <p class=\\\"col-xs-3 \\\">{{na['errorMsg']}}</p>\\n        <a class=\\\"col-xs-1 delFileIcon\\\" role=\\\"button\\\" (click)=\\\"removeFile(j,'na')\\\" *ngIf=\\\"uploadClick\\\">&nbsp;<i class=\\\"fa fa-times\\\"></i></a>\\n    </div>\\n\\n    <p *ngIf=\\\"uploadMsg\\\" class=\\\"{{uploadMsgClass}} + afu-upload-status\\\">{{uploadMsgText}}<p>\\n    <div *ngIf=\\\"!singleFile && progressBarShow && !hideProgressBar\\\">\\n        <div class=\\\"progress col-xs-4 padMarg afu-progress-bar\\\">\\n            <span class=\\\"progress-bar progress-bar-success\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{'width':percentComplete+'%'}\\\">{{percentComplete}}%</span>\\n        </div>\\n        <br>\\n        <br>\\n    </div>\\n    <button class=\\\"btn btn-success afu-upload-btn\\\" type=\\\"button\\\" (click)=\\\"uploadFiles()\\\" [disabled]=!uploadBtn>{{uploadBtnText}}</button>\\n    <br>\\n</div>\\n\\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\\n<div *ngIf=\\\"theme == 'attachPin'\\\" id=\\\"attachPin\\\">\\n    <div style=\\\"position:relative;padding-left:6px\\\">\\n        <a class='btn up_btn afu-attach-pin' (click)=\\\"attachpinOnclick()\\\">\\n            {{attachPinText}}\\n            <i class=\\\"fa fa-paperclip\\\" aria-hidden=\\\"true\\\"></i>\\n            <!-- <p style=\\\"margin-top:10px\\\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize * 1024000))}}</p> -->\\n            <input type=\\\"file\\\" id=\\\"sel{{id}}\\\" (change)=\\\"onChange($event)\\\" style=\\\"display: none\\\" title=\\\"Select file\\\" name=\\\"files[]\\\" [accept]=formatsAllowed\\n                [attr.multiple]=\\\"multiple ? '' : null\\\" />\\n            <br>\\n        </a>\\n        &nbsp;\\n        <span class='label label-info' id=\\\"upload-file-info{{id}}\\\">{{selectedFiles[0]?.name}}</span>\\n    </div>\\n</div>\\n\\n<!--/////////////////////////// DRAG N DROP THEME  //////////////////////////////////////////////////////////-->\\n<!-- <div *ngIf=\\\"theme == 'dragNDrop'\\\" id=\\\"dragNDrop\\\">\\n  <div style=\\\"position:relative;padding-left:6px\\\">\\n    <div id=\\\"div1\\\" (drop)=\\\"drop($event)\\\" (dragover)=\\\"allowDrop($event)\\\">\\n      <p>Drag N Drop</p>\\n    </div>\\n    <span class='label label-info' id=\\\"upload-file-info{{id}}\\\">{{selectedFiles[0]?.name}}</span>\\n  </div>\\n</div> -->\",\n      styles: [\".constraints-info{margin-top:10px;font-style:italic}.padMarg{padding:0;margin-bottom:0}.caption{margin-right:5px}.textOverflow{white-space:nowrap;padding-right:0;overflow:hidden;text-overflow:ellipsis}.up_btn{color:#000;background-color:transparent;border:2px solid #5c5b5b;border-radius:22px}.delFileIcon{text-decoration:none;color:#ce0909}.dragNDrop .div1{display:border-box;border:2px dashed #5c5b5b;height:6rem;width:20rem}.dragNDrop .div1>p{text-align:center;font-weight:700;color:#5c5b5b;margin-top:1.4em}.dragNDropBtmPad{padding-bottom:2rem}@media screen and (max-width:620px){.caption{padding:0}}@media screen and (max-width:510px){.sizeC{width:25%}}@media screen and (max-width:260px){.caption,.sizeC{font-size:10px}}.resetBtn{margin-left:3px}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    config: [{\n      type: Input\n    }],\n    resetUpload: [{\n      type: Input\n    }],\n    ApiResponse: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar AngularFileUploaderModule = function AngularFileUploaderModule() {\n  _classCallCheck(this, AngularFileUploaderModule);\n};\n\nAngularFileUploaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: AngularFileUploaderModule\n});\nAngularFileUploaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function AngularFileUploaderModule_Factory(t) {\n    return new (t || AngularFileUploaderModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularFileUploaderModule, {\n    declarations: function declarations() {\n      return [AngularFileUploaderComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [AngularFileUploaderComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AngularFileUploaderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [AngularFileUploaderComponent],\n      exports: [AngularFileUploaderComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { AngularFileUploaderService, AngularFileUploaderComponent, AngularFileUploaderModule };","map":{"version":3,"sources":["ng:/angular-file-uploader/lib/angular-file-uploader.service.ts","ng:/angular-file-uploader/lib/angular-file-uploader.component.ts","ng:/angular-file-uploader/lib/angular-file-uploader.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularFileUploaderService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, Inject, ViewEncapsulation } from '@angular/core';\n@Component({\n  selector: \"angular-file-uploader\",\n  template: `<div class=\"container\" *ngIf=\"(theme !== 'attachPin')\" id=\"default\">\n\n    <!-- Drag n Drop theme Starts -->\n    <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\" [ngClass]=\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\" class=\"dragNDrop\">\n        <div style=\"position:relative;\">\n            <div id=\"div1\" class=\"div1 afu-dragndrop-box\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\n                <p class=\"afu-dragndrop-text\">Drag N Drop</p>\n            </div>\n            <!-- <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span> -->\n        </div>\n    </div>\n    <!-- Drag n Drop theme Ends -->\n\n    <label for=\"sel{{id}}\" class=\"btn btn-primary btn-sm afu-select-btn\" *ngIf=\"!hideSelectBtn\">Select File<span *ngIf=\"multiple\">s</span></label>\n    <input type=\"file\" id=\"sel{{id}}\" style=\"display: none\" *ngIf=\"!hideSelectBtn\" (change)=\"onChange($event)\" title=\"Select file\"\n        name=\"files[]\" [accept]=formatsAllowed [attr.multiple]=\"multiple ? '' : null\" />\n    <button class=\"btn btn-info btn-sm resetBtn afu-reset-btn\" (click)=\"resetFileUpload()\" *ngIf=\"!hideResetBtn\">Reset</button>\n    <br *ngIf=\"!hideSelectBtn\">\n    <p class=\"constraints-info afu-constraints-info\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize *1024000))}}</p>\n    <!--Selected file list-->\n    <div class=\"row afu-valid-file\" *ngFor=\"let sf of selectedFiles;let i=index\" >\n        <p class=\"col-xs-3 textOverflow\"><span class=\"text-primary\">{{sf.name}}</span></p>\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n        <!--  <input class=\"col-xs-3 progress caption\"  type=\"text\"  placeholder=\"Caption..\"  [(ngModel)]=\"Caption[i]\"  *ngIf=\"uploadClick\"/> -->\n        <div class=\"progress col-xs-3 padMarg afu-progress-bar\" *ngIf=\"singleFile && progressBarShow && !hideProgressBar\">\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\n        </div>\n        <a class=\"col-xs-1\" role=\"button\" (click)=\"removeFile(i,'sf')\" *ngIf=\"uploadClick\"><i class=\"fa fa-times\"></i></a>\n    </div>\n    <!--Invalid file list-->\n    <div class=\"row text-danger afu-invalid-file\" *ngFor=\"let na of notAllowedList;let j=index\">\n        <p class=\"col-xs-3 textOverflow\"><span>{{na['fileName']}}</span></p>\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{na['fileSize']}})</strong></p>\n        <p class=\"col-xs-3 \">{{na['errorMsg']}}</p>\n        <a class=\"col-xs-1 delFileIcon\" role=\"button\" (click)=\"removeFile(j,'na')\" *ngIf=\"uploadClick\">&nbsp;<i class=\"fa fa-times\"></i></a>\n    </div>\n\n    <p *ngIf=\"uploadMsg\" class=\"{{uploadMsgClass}} + afu-upload-status\">{{uploadMsgText}}<p>\n    <div *ngIf=\"!singleFile && progressBarShow && !hideProgressBar\">\n        <div class=\"progress col-xs-4 padMarg afu-progress-bar\">\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\n        </div>\n        <br>\n        <br>\n    </div>\n    <button class=\"btn btn-success afu-upload-btn\" type=\"button\" (click)=\"uploadFiles()\" [disabled]=!uploadBtn>{{uploadBtnText}}</button>\n    <br>\n</div>\n\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\n<div *ngIf=\"theme == 'attachPin'\" id=\"attachPin\">\n    <div style=\"position:relative;padding-left:6px\">\n        <a class='btn up_btn afu-attach-pin' (click)=\"attachpinOnclick()\">\n            {{attachPinText}}\n            <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\n            <!-- <p style=\"margin-top:10px\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize * 1024000))}}</p> -->\n            <input type=\"file\" id=\"sel{{id}}\" (change)=\"onChange($event)\" style=\"display: none\" title=\"Select file\" name=\"files[]\" [accept]=formatsAllowed\n                [attr.multiple]=\"multiple ? '' : null\" />\n            <br>\n        </a>\n        &nbsp;\n        <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\n    </div>\n</div>\n\n<!--/////////////////////////// DRAG N DROP THEME  //////////////////////////////////////////////////////////-->\n<!-- <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\">\n  <div style=\"position:relative;padding-left:6px\">\n    <div id=\"div1\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\n      <p>Drag N Drop</p>\n    </div>\n    <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\n  </div>\n</div> -->` ,\n  styles: [`.constraints-info{margin-top:10px;font-style:italic}.padMarg{padding:0;margin-bottom:0}.caption{margin-right:5px}.textOverflow{white-space:nowrap;padding-right:0;overflow:hidden;text-overflow:ellipsis}.up_btn{color:#000;background-color:transparent;border:2px solid #5c5b5b;border-radius:22px}.delFileIcon{text-decoration:none;color:#ce0909}.dragNDrop .div1{display:border-box;border:2px dashed #5c5b5b;height:6rem;width:20rem}.dragNDrop .div1>p{text-align:center;font-weight:700;color:#5c5b5b;margin-top:1.4em}.dragNDropBtmPad{padding-bottom:2rem}@media screen and (max-width:620px){.caption{padding:0}}@media screen and (max-width:510px){.sizeC{width:25%}}@media screen and (max-width:260px){.caption,.sizeC{font-size:10px}}.resetBtn{margin-left:3px}`]\n})\nexport class AngularFileUploaderComponent implements OnInit, OnChanges {\n  @Input()\n  config: any = {};\n  @Input()\n  resetUpload: boolean = this.config[\"resetUpload\"];\n  @Output()\n  ApiResponse = new EventEmitter();\n\n  theme: string;\n  id: number;\n  hideProgressBar: boolean;\n  maxSize: number;\n  uploadAPI: string;\n  formatsAllowed: string;\n  multiple: boolean;\n  headers: any;\n  hideResetBtn: boolean;\n  hideSelectBtn: boolean;\n  attachPinText: string;\n  uploadBtnText: string;\n\n  idDate: number = +new Date();\n  reg: RegExp = /(?:\\.([^.]+))?$/;\n  selectedFiles: Array<any> = [];\n  notAllowedList: Array<Object> = [];\n  Caption: Array<string> = [];\n  singleFile = true;\n  progressBarShow = false;\n  uploadBtn = false;\n  uploadMsg = false;\n  afterUpload = false;\n  uploadClick = true;\n  uploadMsgText: string;\n  uploadMsgClass: string;\n  percentComplete: number;\n\n  constructor() {\n    //console.log(\"id: \",this.id);\n    //console.log(\"idDate: \",this.idDate);\n    //console.log(Math.random());\n  }\n\n  ngOnChanges(rst: SimpleChanges) {\n    if (rst[\"config\"]) {\n      this.theme = this.config[\"theme\"] || \"\";\n      this.id =\n        this.config[\"id\"] ||\n        parseInt((this.idDate / 10000).toString().split(\".\")[1]) +\n          Math.floor(Math.random() * 20) * 10000;\n      this.hideProgressBar = this.config[\"hideProgressBar\"] || false;\n      this.hideResetBtn = this.config[\"hideResetBtn\"] || false;\n      this.hideSelectBtn = this.config[\"hideSelectBtn\"] || false;\n      this.uploadBtnText = this.config[\"uploadBtnText\"] || \"Upload\";\n      this.maxSize = this.config[\"maxSize\"] || 20;\n      this.uploadAPI = this.config[\"uploadAPI\"][\"url\"];\n      this.formatsAllowed =\n        this.config[\"formatsAllowed\"] || \".jpg,.png,.pdf,.docx,.txt,.gif,.jpeg\";\n      this.multiple = this.config[\"multiple\"] || false;\n      this.headers = this.config[\"uploadAPI\"][\"headers\"] || {};\n      this.attachPinText =\n        this.config[\"attachPinText\"] || \"Attach supporting documents..\";\n      //console.log(\"config: \", this.config);\n      //console.log(this.config[\"maxSize\"]);\n      //console.log(this.headers);\n      //console.log(\"rst: \", rst);\n    }\n\n    if (rst[\"resetUpload\"]) {\n      if (rst[\"resetUpload\"].currentValue === true) {\n        this.resetFileUpload();\n      }\n    }\n  }\n\n  ngOnInit() {\n    //console.log(\"Id: \", this.id);\n    this.resetUpload = false;\n  }\n\n  resetFileUpload() {\n    this.selectedFiles = [];\n    this.Caption = [];\n    this.notAllowedList = [];\n    this.uploadMsg = false;\n    this.uploadBtn = false;\n  }\n\n  onChange(event: any) {\n    //console.log(this.maxSize + this.formatsAllowed + this.multiple);\n    this.notAllowedList = [];\n    //console.log(\"onchange hit\");\n    if (this.afterUpload || !this.multiple) {\n      this.selectedFiles = [];\n      this.Caption = [];\n      this.afterUpload = false;\n    }\n    //FORMATS ALLOWED LIST\n    //console.log(\"FORMATS ALLOWED LIST= \"+this.formatsAllowed);\n    //NO OF FORMATS ALLOWED\n    let formatsCount: any;\n    formatsCount = this.formatsAllowed.match(new RegExp(\"\\\\.\", \"g\"));\n    formatsCount = formatsCount.length;\n    //console.log(\"NO OF FORMATS ALLOWED= \"+formatsCount);\n    //console.log(\"-------------------------------\");\n\n    //ITERATE SELECTED FILES\n    let file: FileList;\n    if (event.type == \"drop\") {\n      file = event.dataTransfer.files;\n      //console.log(\"type: drop\");\n    } else {\n      file = event.target.files || event.srcElement.files;\n      //console.log(\"type: change\");\n    }\n    //console.log(file);\n    let currentFileExt: any;\n    let ext: any;\n    let frmtAllowed: boolean;\n    for (let i = 0; i < file.length; i++) {\n      //CHECK FORMAT\n      //CURRENT FILE EXTENSION\n      currentFileExt = this.reg.exec(file[i].name);\n      currentFileExt = currentFileExt[1];\n      //console.log(file[i].name);\n      frmtAllowed = false;\n      //FORMAT ALLOWED LIST ITERATE\n      for (let j = formatsCount; j > 0; j--) {\n        ext = this.formatsAllowed.split(\".\")[j];\n        //console.log(\"FORMAT LIST (\"+j+\")= \"+ext.split(\",\")[0]);\n        if (j == formatsCount) {\n          ext = this.formatsAllowed.split(\".\")[j] + \",\";\n        } //check format\n        if (currentFileExt.toLowerCase() == ext.split(\",\")[0]) {\n          frmtAllowed = true;\n        }\n      }\n\n      if (frmtAllowed) {\n        //console.log(\"FORMAT ALLOWED\");\n        //CHECK SIZE\n        if (file[i].size > this.maxSize * 1024000) {\n          //console.log(\"SIZE NOT ALLOWED (\"+file[i].size+\")\");\n          this.notAllowedList.push({\n            fileName: file[i].name,\n            fileSize: this.convertSize(file[i].size),\n            errorMsg: \"Invalid size\"\n          });\n          continue;\n        } else {\n          //format allowed and size allowed then add file to selectedFile array\n          this.selectedFiles.push(file[i]);\n        }\n      } else {\n        //console.log(\"FORMAT NOT ALLOWED\");\n        this.notAllowedList.push({\n          fileName: file[i].name,\n          fileSize: this.convertSize(file[i].size),\n          errorMsg: \"Invalid format\"\n        });\n        continue;\n      }\n    }\n\n    if (this.selectedFiles.length !== 0) {\n      this.uploadBtn = true;\n      if (this.theme == \"attachPin\") this.uploadFiles();\n    } else {\n      this.uploadBtn = false;\n    }\n    this.uploadMsg = false;\n    this.uploadClick = true;\n    this.percentComplete = 0;\n    event.target.value = null;\n  }\n\n  uploadFiles() {\n    //console.log(this.selectedFiles);\n\n    let i: any;\n    this.progressBarShow = true;\n    this.uploadClick = false;\n    this.notAllowedList = [];\n    let isError = false;\n\n    let xhr = new XMLHttpRequest();\n    let formData = new FormData();\n\n    for (i = 0; i < this.selectedFiles.length; i++) {\n      if (this.Caption[i] == undefined) \n        this.Caption[i] = \"file\" + i;\n      //Add DATA TO BE SENT\n      formData.append(\n        this.Caption[i],\n        this.selectedFiles[i] /*, this.selectedFiles[i].name*/\n      );\n      //console.log(this.selectedFiles[i]+\"{\"+this.Caption[i]+\" (Caption)}\");\n    }\n\n    if (i > 1) {\n      this.singleFile = false;\n    } else {\n      this.singleFile = true;\n    }\n\n    xhr.onreadystatechange = evnt => {\n      //console.log(\"onready\");\n      if (xhr.readyState === 4) {\n        if (xhr.status !== 200) {\n          isError = true;\n          this.progressBarShow = false;\n          this.uploadBtn = false;\n          this.uploadMsg = true;\n          this.afterUpload = true;\n          this.uploadMsgText = \"Upload Failed !\";\n          this.uploadMsgClass = \"text-danger lead\";\n          //console.log(this.uploadMsgText);\n          //console.log(evnt);\n        }\n        this.ApiResponse.emit(xhr);\n      }\n    };\n\n    xhr.upload.onprogress = evnt => {\n      this.uploadBtn = false; // button should be disabled by process uploading\n      if (evnt.lengthComputable) {\n        this.percentComplete = Math.round((evnt.loaded / evnt.total) * 100);\n      }\n      //console.log(\"Progress...\"/*+this.percentComplete+\" %\"*/);\n    };\n\n    xhr.onload = evnt => {\n      //console.log(\"onload\");\n      //console.log(evnt);\n      this.progressBarShow = false;\n      this.uploadBtn = false;\n      this.uploadMsg = true;\n      this.afterUpload = true;\n      if (!isError) {\n        this.uploadMsgText = \"Successfully Uploaded !\";\n        this.uploadMsgClass = \"text-success lead\";\n        //console.log(this.uploadMsgText + \" \" + this.selectedFiles.length + \" file\");\n      }\n    };\n\n    xhr.onerror = evnt => {\n      //console.log(\"onerror\");\n      //console.log(evnt);\n    };\n\n    xhr.open(\"POST\", this.uploadAPI, true);\n    for (const key of Object.keys(this.headers)) {\n      // Object.keys will give an Array of keys\n      xhr.setRequestHeader(key, this.headers[key]);\n    }\n    //let token = sessionStorage.getItem(\"token\");\n    //xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n    //xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n    xhr.send(formData);\n  }\n\n  removeFile(i: any, sf_na: any) {\n    //console.log(\"remove file clicked \" + i)\n    if (sf_na == \"sf\") {\n      this.selectedFiles.splice(i, 1);\n      this.Caption.splice(i, 1);\n    } else {\n      this.notAllowedList.splice(i, 1);\n    }\n\n    if (this.selectedFiles.length == 0) {\n      this.uploadBtn = false;\n    }\n  }\n\n  convertSize(fileSize: number) {\n    //console.log(fileSize + \" - \"+ str);\n    return fileSize < 1024000\n      ? (fileSize / 1024).toFixed(2) + \" KB\"\n      : (fileSize / 1024000).toFixed(2) + \" MB\";\n  }\n\n  attachpinOnclick() {\n    //console.log(\"ID: \", this.id);\n    document.getElementById(\"sel\" + this.id)!.click();\n    //$(\"#\"+\"sel\"+this.id).click();\n  }\n\n  drop(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    //console.log(\"drop: \", event);\n    //console.log(\"drop: \", event.dataTransfer.files);\n    this.onChange(event);\n  }\n  allowDrop(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"copy\";\n    //console.log(\"allowDrop: \",event)\n  }\n}\n\n/* interface CONFIG {\n  uploadAPI: string;\n  multiple?: boolean;\n  formatsAllowed?: string;\n  maxSize?: number;\n  id?: number;\n  resetUpload?: boolean;\n  theme?: string;\n  hideProgressBar?: boolean;\n }\n */","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularFileUploaderComponent } from './angular-file-uploader.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [AngularFileUploaderComponent],\n  exports: [AngularFileUploaderComponent]\n})\nexport class AngularFileUploaderModule { }\n"]},"metadata":{},"sourceType":"module"}